// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

/*
Package jalindi is a generated protocol buffer package.

It is generated from these files:
	event.proto

It has these top-level messages:
	PostEventRequest
	PostEventResponse
	PostEventListRequest
	PostEventListResponse
	Event
	Client
*/
package jalindi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostEventRequest struct {
	Event       *Event  `protobuf:"bytes,3,opt,name=event" json:"event,omitempty"`
	Client      *Client `protobuf:"bytes,4,opt,name=client" json:"client,omitempty"`
	BrowserUuid string  `protobuf:"bytes,1,opt,name=browser_uuid,json=browserUuid" json:"browser_uuid,omitempty"`
	RequestUuid string  `protobuf:"bytes,2,opt,name=request_uuid,json=requestUuid" json:"request_uuid,omitempty"`
	UserAgent   string  `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	Referer     string  `protobuf:"bytes,6,opt,name=referer" json:"referer,omitempty"`
}

func (m *PostEventRequest) Reset()                    { *m = PostEventRequest{} }
func (m *PostEventRequest) String() string            { return proto.CompactTextString(m) }
func (*PostEventRequest) ProtoMessage()               {}
func (*PostEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PostEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *PostEventRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *PostEventRequest) GetBrowserUuid() string {
	if m != nil {
		return m.BrowserUuid
	}
	return ""
}

func (m *PostEventRequest) GetRequestUuid() string {
	if m != nil {
		return m.RequestUuid
	}
	return ""
}

func (m *PostEventRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *PostEventRequest) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

type PostEventResponse struct {
}

func (m *PostEventResponse) Reset()                    { *m = PostEventResponse{} }
func (m *PostEventResponse) String() string            { return proto.CompactTextString(m) }
func (*PostEventResponse) ProtoMessage()               {}
func (*PostEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PostEventListRequest struct {
	Event       []*Event `protobuf:"bytes,3,rep,name=event" json:"event,omitempty"`
	Client      *Client  `protobuf:"bytes,4,opt,name=client" json:"client,omitempty"`
	BrowserUuid string   `protobuf:"bytes,1,opt,name=browser_uuid,json=browserUuid" json:"browser_uuid,omitempty"`
	RequestUuid string   `protobuf:"bytes,2,opt,name=request_uuid,json=requestUuid" json:"request_uuid,omitempty"`
	UserAgent   string   `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	Referer     string   `protobuf:"bytes,6,opt,name=referer" json:"referer,omitempty"`
}

func (m *PostEventListRequest) Reset()                    { *m = PostEventListRequest{} }
func (m *PostEventListRequest) String() string            { return proto.CompactTextString(m) }
func (*PostEventListRequest) ProtoMessage()               {}
func (*PostEventListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PostEventListRequest) GetEvent() []*Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *PostEventListRequest) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *PostEventListRequest) GetBrowserUuid() string {
	if m != nil {
		return m.BrowserUuid
	}
	return ""
}

func (m *PostEventListRequest) GetRequestUuid() string {
	if m != nil {
		return m.RequestUuid
	}
	return ""
}

func (m *PostEventListRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *PostEventListRequest) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

type PostEventListResponse struct {
}

func (m *PostEventListResponse) Reset()                    { *m = PostEventListResponse{} }
func (m *PostEventListResponse) String() string            { return proto.CompactTextString(m) }
func (*PostEventListResponse) ProtoMessage()               {}
func (*PostEventListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Event struct {
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Type      string                     `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Group     string                     `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	Action    string                     `protobuf:"bytes,4,opt,name=action" json:"action,omitempty"`
	Amount    int64                      `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Event) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Event) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Event) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Client struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version         string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Platform        string `protobuf:"bytes,3,opt,name=platform" json:"platform,omitempty"`
	PlatformVersion string `protobuf:"bytes,4,opt,name=platform_version,json=platformVersion" json:"platform_version,omitempty"`
	DeviceName      string `protobuf:"bytes,5,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	Experiment      bool   `protobuf:"varint,6,opt,name=experiment" json:"experiment,omitempty"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Client) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Client) GetPlatformVersion() string {
	if m != nil {
		return m.PlatformVersion
	}
	return ""
}

func (m *Client) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *Client) GetExperiment() bool {
	if m != nil {
		return m.Experiment
	}
	return false
}

func init() {
	proto.RegisterType((*PostEventRequest)(nil), "jalindi.PostEventRequest")
	proto.RegisterType((*PostEventResponse)(nil), "jalindi.PostEventResponse")
	proto.RegisterType((*PostEventListRequest)(nil), "jalindi.PostEventListRequest")
	proto.RegisterType((*PostEventListResponse)(nil), "jalindi.PostEventListResponse")
	proto.RegisterType((*Event)(nil), "jalindi.Event")
	proto.RegisterType((*Client)(nil), "jalindi.Client")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for JalindiService service

type JalindiServiceClient interface {
	PostEvent(ctx context.Context, in *PostEventRequest, opts ...grpc.CallOption) (*PostEventResponse, error)
	PostEventList(ctx context.Context, in *PostEventListRequest, opts ...grpc.CallOption) (*PostEventListResponse, error)
}

type jalindiServiceClient struct {
	cc *grpc.ClientConn
}

func NewJalindiServiceClient(cc *grpc.ClientConn) JalindiServiceClient {
	return &jalindiServiceClient{cc}
}

func (c *jalindiServiceClient) PostEvent(ctx context.Context, in *PostEventRequest, opts ...grpc.CallOption) (*PostEventResponse, error) {
	out := new(PostEventResponse)
	err := grpc.Invoke(ctx, "/jalindi.JalindiService/PostEvent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jalindiServiceClient) PostEventList(ctx context.Context, in *PostEventListRequest, opts ...grpc.CallOption) (*PostEventListResponse, error) {
	out := new(PostEventListResponse)
	err := grpc.Invoke(ctx, "/jalindi.JalindiService/PostEventList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JalindiService service

type JalindiServiceServer interface {
	PostEvent(context.Context, *PostEventRequest) (*PostEventResponse, error)
	PostEventList(context.Context, *PostEventListRequest) (*PostEventListResponse, error)
}

func RegisterJalindiServiceServer(s *grpc.Server, srv JalindiServiceServer) {
	s.RegisterService(&_JalindiService_serviceDesc, srv)
}

func _JalindiService_PostEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JalindiServiceServer).PostEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jalindi.JalindiService/PostEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JalindiServiceServer).PostEvent(ctx, req.(*PostEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JalindiService_PostEventList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostEventListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JalindiServiceServer).PostEventList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jalindi.JalindiService/PostEventList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JalindiServiceServer).PostEventList(ctx, req.(*PostEventListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JalindiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jalindi.JalindiService",
	HandlerType: (*JalindiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEvent",
			Handler:    _JalindiService_PostEvent_Handler,
		},
		{
			MethodName: "PostEventList",
			Handler:    _JalindiService_PostEventList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xa4, 0x71, 0xeb, 0x31, 0xb4, 0x65, 0x28, 0x10, 0x2c, 0xf5, 0x87, 0x08, 0x89, 0x72,
	0x71, 0xa5, 0x70, 0xe1, 0x8a, 0x80, 0x0b, 0x42, 0xa8, 0x32, 0x3f, 0xd7, 0xc8, 0x49, 0x26, 0xd1,
	0x22, 0xdb, 0x6b, 0xd6, 0xbb, 0x01, 0x9e, 0x85, 0x17, 0xe0, 0x29, 0x78, 0x16, 0x0e, 0x3c, 0x08,
	0xda, 0xd9, 0x5d, 0x13, 0x4a, 0x79, 0x80, 0xde, 0x3c, 0xdf, 0x7c, 0x3b, 0x33, 0xdf, 0xcc, 0x67,
	0x48, 0x69, 0x4d, 0x8d, 0xce, 0x5b, 0x25, 0xb5, 0xc4, 0xed, 0x8f, 0x65, 0x25, 0x9a, 0x85, 0xc8,
	0x8e, 0x57, 0x52, 0xae, 0x2a, 0x3a, 0x63, 0x78, 0x66, 0x96, 0x67, 0x5a, 0xd4, 0xd4, 0xe9, 0xb2,
	0x6e, 0x1d, 0x73, 0xfc, 0x33, 0x82, 0xfd, 0x73, 0xd9, 0xe9, 0x97, 0xf6, 0x75, 0x41, 0x9f, 0x0c,
	0x75, 0x1a, 0x1f, 0xc2, 0x90, 0xab, 0x8d, 0x06, 0x27, 0xd1, 0x69, 0x3a, 0xd9, 0xcd, 0x7d, 0xb9,
	0xdc, 0xb1, 0x5c, 0x12, 0x1f, 0x41, 0x3c, 0xaf, 0x84, 0xa5, 0x6d, 0x31, 0x6d, 0xaf, 0xa7, 0x3d,
	0x67, 0xb8, 0xf0, 0x69, 0x7c, 0x00, 0x37, 0x66, 0x4a, 0x7e, 0xee, 0x48, 0x4d, 0x8d, 0x11, 0x8b,
	0x51, 0x74, 0x12, 0x9d, 0x26, 0x45, 0xea, 0xb1, 0xf7, 0x46, 0x2c, 0x2c, 0x45, 0xb9, 0xe6, 0x8e,
	0x72, 0xdd, 0x51, 0x3c, 0xc6, 0x94, 0x43, 0x00, 0x63, 0x4b, 0x94, 0x2b, 0xdb, 0x72, 0xc8, 0x84,
	0xc4, 0x22, 0xcf, 0x2c, 0x80, 0x23, 0xd8, 0x56, 0xb4, 0x24, 0x45, 0x6a, 0x14, 0x73, 0x2e, 0x84,
	0xe3, 0xdb, 0x70, 0x6b, 0x43, 0x61, 0xd7, 0xca, 0xa6, 0xa3, 0xf1, 0xaf, 0x08, 0x0e, 0x7a, 0xf4,
	0xb5, 0xe8, 0x2e, 0xd3, 0x3e, 0xb8, 0xfa, 0xda, 0xef, 0xc1, 0x9d, 0x0b, 0x2a, 0xbd, 0xfe, 0x6f,
	0x11, 0x0c, 0x19, 0xc5, 0xa7, 0x90, 0xf4, 0xa6, 0xe0, 0xf1, 0xd2, 0x49, 0x96, 0x3b, 0xdb, 0xe4,
	0xc1, 0x36, 0xf9, 0xbb, 0xc0, 0x28, 0xfe, 0x90, 0x11, 0x61, 0x4b, 0x7f, 0x6d, 0xc9, 0x0f, 0xcc,
	0xdf, 0x78, 0x00, 0xc3, 0x95, 0x92, 0xa6, 0x65, 0xeb, 0x24, 0x85, 0x0b, 0xf0, 0x2e, 0xc4, 0xe5,
	0x5c, 0x0b, 0xd9, 0xf0, 0xba, 0x92, 0xc2, 0x47, 0x8c, 0xd7, 0xd2, 0x78, 0x4d, 0x83, 0xc2, 0x47,
	0xe3, 0x1f, 0x11, 0xc4, 0x6e, 0x91, 0xb6, 0x49, 0x53, 0xd6, 0xe4, 0x17, 0xc7, 0xdf, 0x56, 0xef,
	0x9a, 0x54, 0x67, 0xeb, 0xb9, 0xde, 0x21, 0xc4, 0x0c, 0x76, 0xda, 0xaa, 0xd4, 0x4b, 0xa9, 0x6a,
	0x3f, 0x41, 0x1f, 0xe3, 0x63, 0xd8, 0x0f, 0xdf, 0xd3, 0xf0, 0xdc, 0x8d, 0xb3, 0x17, 0xf0, 0x0f,
	0xbe, 0xcc, 0x31, 0xa4, 0x0b, 0x5a, 0x8b, 0x39, 0x4d, 0xb9, 0xb7, 0x5b, 0x38, 0x38, 0xe8, 0x8d,
	0x9d, 0xe0, 0x08, 0x80, 0xbe, 0xb4, 0xa4, 0x44, 0x6d, 0x0f, 0x62, 0x97, 0xbe, 0x53, 0x6c, 0x20,
	0x93, 0xef, 0x11, 0xec, 0xbe, 0x72, 0x8e, 0x78, 0x4b, 0xca, 0x3e, 0xc3, 0x17, 0x90, 0xf4, 0xa7,
	0xc0, 0xfb, 0xbd, 0x5f, 0x2e, 0xfe, 0x7c, 0x59, 0x76, 0x59, 0xca, 0x5f, 0xed, 0x1a, 0x9e, 0xc3,
	0xcd, 0xbf, 0x0e, 0x8a, 0x87, 0xff, 0xd2, 0x37, 0xec, 0x9c, 0x1d, 0xfd, 0x2f, 0x1d, 0x2a, 0xce,
	0x62, 0x3e, 0xf2, 0x93, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0x26, 0x1e, 0x21, 0x41, 0x04,
	0x00, 0x00,
}
